{"version":3,"sources":["eyecatch.promise-monitor.min.js"],"names":["angular","module","provider","this","$get","$q","PromiseMonitor","options","monitored","self","isActive","updateActive","length","addPromise","promise","deferred","defer","push","then","splice","indexOf","value","resolve","reject","destroy","cancel","i","create","config","$httpProvider","interceptors","request","monitor","isArray","$promiseMonitorDeferred","forEach","when","response","responseError"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAA,WACIA,QAAQC,OAAO,+BAAgCC,SAAS,iBAAkB,WA+CtE,MA9CAC,MAAKC,MAAS,KAAM,SAASC,GACzB,QAASC,GAAeC,GACpB,GAAIC,MACAC,EAAON,IACXM,GAAKF,QAAUA,MACfE,EAAKC,UAAW,CAChB,IAAIC,GAAe,WACfF,EAAKC,SAAWF,EAAUI,OAAS,EA+BvC,OA7BAH,GAAKI,WAAa,SAASC,GACvB,GAAIC,GAAWV,EAAGW,OAmBlB,OAlBAR,GAAUS,KAAKF,GACfJ,IACAI,EAASD,QAAQI,KAAK,WAClBV,EAAUW,OAAOX,EAAUY,QAAQL,GAAW,GAC9CJ,KACD,WACCH,EAAUW,OAAOX,EAAUY,QAAQL,GAAW,GAC9CJ,MAEAG,GACAA,EAAQI,KAAK,SAASG,GAElB,MADAN,GAASO,QAAQD,GACVA,GACR,SAASA,GAER,MADAN,GAASQ,OAAOF,GACThB,EAAGkB,OAAOF,KAGlBN,GAEXN,EAAKe,QAAUf,EAAKgB,OAAS,WACzB,IAAK,GAAIC,GAAIlB,EAAUI,OAAS,EAAGc,GAAK,EAAGA,IACvClB,EAAUkB,GAAGJ,SAEjBd,MACAG,KAEGF,EAEX,OACIkB,OAAQ,SAASpB,GACb,MAAO,IAAID,GAAeC,OAI/BJ,UAIf,WACIH,QAAQC,OAAO,4BAA4B2B,QAAS,gBAAiB,SAASC,GAC1EA,EAAcC,aAAab,MAAO,KAAM,SAASZ,GAC7C,OACI0B,QAAS,SAASH,GAUd,MATIA,GAAOI,UACFhC,QAAQiC,QAAQL,EAAOI,WACxBJ,EAAOI,SAAYJ,EAAOI,UAE9BJ,EAAOM,wBAA0BN,EAAOM,4BACxClC,QAAQmC,QAAQP,EAAOI,QAAS,SAASA,GACrCJ,EAAOM,wBAAwBjB,KAAKe,EAAQnB,iBAG7CR,EAAG+B,KAAKR,IAEnBS,SAAU,SAASA,GAMf,MALIA,GAAST,QAAUS,EAAST,OAAOM,yBACnClC,QAAQmC,QAAQE,EAAST,OAAOM,wBAAyB,SAASnB,GAC9DA,EAASO,QAAQe,KAGlBhC,EAAG+B,KAAKC,IAEnBC,cAAe,SAASD,GAMpB,MALIA,GAAST,QAAUS,EAAST,OAAOM,yBACnClC,QAAQmC,QAAQE,EAAST,OAAOM,wBAAyB,SAASnB,GAC9DA,EAASQ,OAAOc,KAGjBhC,EAAGkB,OAAOc","file":"eyecatch.promise-monitor.min.js","sourcesContent":["/**\n * eyecatch-promise-monitor - An Angular module for monitoring promises\n * @version v1.0.0\n * @author Ove Andersen <ove.andersen@outlook.com>\n * @link https://github.com/azzlack/angular-promise-monitor\n * @license Apache-2.0\n */\n(function() {\n    angular.module(\"eyecatch.promise-monitor\", []).provider(\"promiseMonitor\", function() {\n        this.$get = [ \"$q\", function($q) {\n            function PromiseMonitor(options) {\n                var monitored = [];\n                var self = this;\n                self.options = options || {};\n                self.isActive = false;\n                var updateActive = function() {\n                    self.isActive = monitored.length > 0;\n                };\n                self.addPromise = function(promise) {\n                    var deferred = $q.defer();\n                    monitored.push(deferred);\n                    updateActive();\n                    deferred.promise.then(function() {\n                        monitored.splice(monitored.indexOf(deferred), 1);\n                        updateActive();\n                    }, function() {\n                        monitored.splice(monitored.indexOf(deferred), 1);\n                        updateActive();\n                    });\n                    if (promise) {\n                        promise.then(function(value) {\n                            deferred.resolve(value);\n                            return value;\n                        }, function(value) {\n                            deferred.reject(value);\n                            return $q.reject(value);\n                        });\n                    }\n                    return deferred;\n                };\n                self.destroy = self.cancel = function() {\n                    for (var i = monitored.length - 1; i >= 0; i--) {\n                        monitored[i].resolve();\n                    }\n                    monitored = [];\n                    updateActive();\n                };\n                return self;\n            }\n            return {\n                create: function(options) {\n                    return new PromiseMonitor(options);\n                }\n            };\n        } ];\n        return this;\n    });\n})();\n\n(function() {\n    angular.module(\"eyecatch.promise-monitor\").config([ \"$httpProvider\", function($httpProvider) {\n        $httpProvider.interceptors.push([ \"$q\", function($q) {\n            return {\n                request: function(config) {\n                    if (config.monitor) {\n                        if (!angular.isArray(config.monitor)) {\n                            config.monitor = [ config.monitor ];\n                        }\n                        config.$promiseMonitorDeferred = config.$promiseMonitorDeferred || [];\n                        angular.forEach(config.monitor, function(monitor) {\n                            config.$promiseMonitorDeferred.push(monitor.addPromise());\n                        });\n                    }\n                    return $q.when(config);\n                },\n                response: function(response) {\n                    if (response.config && response.config.$promiseMonitorDeferred) {\n                        angular.forEach(response.config.$promiseMonitorDeferred, function(deferred) {\n                            deferred.resolve(response);\n                        });\n                    }\n                    return $q.when(response);\n                },\n                responseError: function(response) {\n                    if (response.config && response.config.$promiseMonitorDeferred) {\n                        angular.forEach(response.config.$promiseMonitorDeferred, function(deferred) {\n                            deferred.reject(response);\n                        });\n                    }\n                    return $q.reject(response);\n                }\n            };\n        } ]);\n    } ]);\n})();"],"sourceRoot":"/source/"}