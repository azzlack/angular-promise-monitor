!function(){angular.module("eyecatch.promise-monitor",[]).provider("promiseMonitor",function(){this.$get=["$q",function(r){function o(o){var e=[],n=this;n.options=o||{},n.active=!1;var t=function(){n.active=e.length>0};n.addPromise=function(o){var n=r.defer();return e.push(n),n.promise.then(function(){e.splice(e.indexOf(n),1),t()},function(){e.splice(e.indexOf(n),1),t()}),o&&o.then(function(r){return n.resolve(r),r},function(o){return n.reject(o),r.reject(o)}),n},n.destroy=n.cancel=function(){for(var r=e.length-1;r>=0;r--)e[r].resolve();e=[]}}return{create:function(r){return new o(r)}}}]})}(),function(){angular.module("eyecatch.promise-monitor",[]).factory("monitorInjector",["$q",function(r){var o={request:function(o){return o.monitor&&(angular.isArray(o.monitor)||(o.monitor=[o.monitor]),o.$promiseMonitorDeferred=o.$promiseMonitorDeferred||[],angular.forEach(o.monitor,function(r){o.$promiseMonitorDeferred.push(r.addPromise())})),r.when(o)},response:function(o){return o.config&&o.config.$promiseMonitorDeferred&&angular.forEach(o.config.$promiseMonitorDeferred,function(r){r.resolve(o)}),r.when(o)},responseError:function(o){return o.config&&o.config.$promiseMonitorDeferred&&angular.forEach(o.config.$promiseMonitorDeferred,function(r){r.reject(o)}),r.reject(o)}};return o}]),angular.module("eyecatch.promise-monitor",[]).config(["$httpProvider",function(r){r.interceptors.push("monitorInjector")}])}();
//# sourceMappingURL=eyecatch.promise-monitor.min.js.map
