/**
 * eyecatch-promise-monitor - An Angular module for monitoring promises
 * @version v1.0.0
 * @author Ove Andersen <ove.andersen@outlook.com>
 * @link https://github.com/azzlack/angular-promise-monitor
 * @license Apache-2.0
 */
!function(){angular.module("eyecatch.promise-monitor",[]).provider("promiseMonitor",function(){return this.$get=["$q",function(r){
// ReSharper disable once InconsistentNaming
function e(e){var n=[],o=this;
// Set default options if necessary
o.options=e||{},o.isActive=!1;var i=function(){o.isActive=n.length>0};return o.addPromise=function(e){var o=r.defer();
// Resolve deferred when promise has completed
return n.push(o),i(),o.promise.then(function(){n.splice(n.indexOf(o),1),i()},function(){n.splice(n.indexOf(o),1),i()}),e&&e.then(function(r){return o.resolve(r),r},function(e){return o.reject(e),r.reject(e)}),o},o.destroy=o.cancel=function(){
// Resolve all promises
for(var r=n.length-1;r>=0;r--)n[r].resolve();
// Reset monitored list
n=[]},o}return{create:function(r){return new e(r)}}}],this})}(),/**
 * eyecatch-promise-monitor - An Angular module for monitoring promises
 * @version v1.0.0
 * @author Ove Andersen <ove.andersen@outlook.com>
 * @link https://github.com/azzlack/angular-promise-monitor
 * @license Apache-2.0
 */
function(){angular.module("eyecatch.promise-monitor").config(["$httpProvider",function(r){r.interceptors.push(["$q",function(r){return{request:function(e){
// TODO: handle cached responses
// Convert to array to simplify handling
// Create promises for each monitor
return e.monitor&&(angular.isArray(e.monitor)||(e.monitor=[e.monitor]),e.$promiseMonitorDeferred=e.$promiseMonitorDeferred||[],angular.forEach(e.monitor,function(r){e.$promiseMonitorDeferred.push(r.addPromise())})),r.when(e)},response:function(e){
// TODO: handle cached responses
return e.config&&e.config.$promiseMonitorDeferred&&angular.forEach(e.config.$promiseMonitorDeferred,function(r){r.resolve(e)}),r.when(e)},responseError:function(e){
// TODO: handle cached responses
return e.config&&e.config.$promiseMonitorDeferred&&angular.forEach(e.config.$promiseMonitorDeferred,function(r){r.reject(e)}),r.reject(e)}}}])}])}();
//# sourceMappingURL=eyecatch.promise-monitor.min.js.map
